
create or replace procedure updateOtps(
	sender varchar,
	sotp varchar
)
language plpgsql    
as $$
begin
    update users
    set otp = sotp,
	 updated_at = (SELECT CAST(EXTRACT(epoch FROM CURRENT_TIMESTAMP) * 1000 AS BIGINT))
    where email = sender;
    commit;
end;$$

CREATE OR REPLACE PROCEDURE LastInsertUser()
LANGUAGE plpgsql    
AS $$
DECLARE
    last_user users%ROWTYPE;  -- Declaring a variable to hold the last user
BEGIN
    SELECT * INTO last_user FROM users ORDER BY id DESC LIMIT 1;
    RAISE NOTICE 'Last User: %', last_user;
    COMMIT;
END;
$$


-- drop table if exists accounts;

-- create table accounts (
--     id int generated by default as identity,
--     name varchar(100) not null,
--     balance dec(15,2) not null,
--     primary key(id)
-- );

-- insert into accounts(name,balance)
-- values('Bob',10000);

-- insert into accounts(name,balance)
-- values('Alice',10000);


-- create or replace procedure transfer(
--    sender int,
--    receiver int, 
--    amount dec
-- )
-- language plpgsql    
-- as $$
-- begin
--     -- subtracting the amount from the sender's account 
--     update accounts 
--     set balance = balance - amount 
--     where id = sender;

--     -- adding the amount to the receiver's account
--     update accounts 
--     set balance = balance + amount 
--     where id = receiver;

--     commit;
-- end;$$

-- call transfer(1,2,1000);

-- select * from accounts;




-- create [or replace] procedure procedure_name(parameter_list)
-- language plpgsql
-- as $$
-- declare
-- -- variable declaration
-- begin
-- -- stored procedure body
-- end; $$




